-- SEQUENCES

CREATE SEQUENCE TOTAL_SEQ
	START WITH 100000000 
	INCREMENT BY 1 
	NO MAXVALUE
;


-- TABLES

CREATE TABLE POSTS (
	POST_UID	BIGINT NOT NULL DEFAULT NEXTVAL('TOTAL_SEQ'),
	THREAD_UID	BIGINT NOT NULL,
	MESSAGE		TEXT,
	ADDED_TS	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	MODIFIED_TS	TIMESTAMP
);

CREATE TABLE THREADS (
	THREAD_UID	BIGINT NOT NULL DEFAULT NEXTVAL('TOTAL_SEQ'),
	MESSAGE		TEXT,
	ADDED_TS	TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	MODIFIED_TS	TIMESTAMP
);



-- CONSTRAINTS

ALTER TABLE POSTS ADD CONSTRAINT PK_POSTS PRIMARY KEY (POST_UID)
;
ALTER TABLE THREADS ADD CONSTRAINT PK_THREADS PRIMARY KEY (THREAD_UID)
;

ALTER TABLE POSTS ADD CONSTRAINT FK_POSTS_THREADS
    FOREIGN KEY ( THREAD_UID ) REFERENCES THREADS ( THREAD_UID )
;

-- TRIGGERS

CREATE OR REPLACE FUNCTION UPDATE_PROC() RETURNS TRIGGER AS $BODY$
    BEGIN
	IF (TG_OP = 'UPDATE') THEN
	      SELECT CURRENT_TIMESTAMP INTO NEW.MODIFIED_TS;
	END IF;
RETURN NEW;
    END;
$BODY$ LANGUAGE plpgsql;


CREATE TRIGGER POSTS_UPD_TRG
 BEFORE UPDATE ON POSTS
 FOR EACH ROW EXECUTE PROCEDURE UPDATE_PROC();

CREATE TRIGGER THREADS_UPD_TRG
 BEFORE UPDATE ON THREADS
 FOR EACH ROW EXECUTE PROCEDURE UPDATE_PROC();


-- INDEXES

CREATE INDEX IX_FK_POSTS_THREADS ON POSTS ( THREAD_UID )
;
